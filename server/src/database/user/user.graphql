type User {
  id: String!
  name: String!
  surn: String!
  email: String!
  pwd: String!
  authId: Int!
  technician: Technician
  manager: Manager
  comments: [Comment!]
  tickets: [Ticket!]
}

input CreateUserInput {
  name: String!
  surn: String!
  email: String!
  pwd: String!
  ticket: CreateTicketInput
}

input UpdateUserInput {
  id: String!
  name: String
  surn: String
  email: String
  pwd: String
  authId: Int
}

input LoginUserInput {
  email: String!
  pwd: String!
}

enum SortDir {
  ASC
  DESC
}

type Query {
  users(
    limit: Int
    name: String
    surn: String
    email: String
    authId: Int
    sort: String
    sortDir: SortDir
  ): [User]
  user(id: String): User
  profile: User
  login(loginUserInput: LoginUserInput): User
}

type Mutation {
  createUser(createUserInput: CreateUserInput): User
  updateUser(updateUserInput: UpdateUserInput): User
  removeUser(id: String): User
}
